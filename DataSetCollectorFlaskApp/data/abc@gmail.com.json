{
    "a1": "Encapsulation is the process of combining data and functions into a single unit called \r\n\r\nclass. In Encapsulation, the data is not accessed directly; it is accessed through the functions present inside \r\nthe class. In simpler words, attributes of the class are kept private and public getter and setter methods are provided to manipulate these attributes. Thus, encapsulation makes the concept of data hiding possible Abstraction is a process where you show only \u201crelevant\u201d data and \u201chide\u201d unnecessary details of an object from the user.\r\n\r\n",
    "a2": "Asymptotic Notations are languages that allow us to analyze an algorithm's running time by identifying its behavior as the input size for the algorithm increases. This is also known as an algorithm's growth rate. Main Types - 1. Big 2.Small 1. Big Notation further divided into three types- 1)Big O 2)Big Omega 3)Big Theta 2. Small Notation further divided into three types- 1)Small o 2)Small Theta\r\n",
    "a3": "Polymorphism means to process objects differently based on their data type.     In other words it means, one method with multiple implementation, for a certain class of action. And     which implementation to be used is decided at runtime depending upon the situation (i.e., data type of     the object) This can be implemented by designing a generic interface, which provides generic methods for a \r\ncertain class of action and there can be multiple classes, which provides the implementation of these generic methods. In object-oriented programming, polymorphism refers to a programming language&#39;s ability to process objects differently depending on their data type or class. More specifically, it is the ability to redefine methods for derived classes. 1) Static Polymorphism also known as compile time polymorphism - Polymorphism that is resolved  during compiler time is known as static polymorphism. Method overloading is an example of compile time polymorphism.2) Dynamic Polymorphism also known as runtime polymorphism - It is also known as Dynamic     Method Dispatch. Dynamic polymorphism is a process in which a call to an overridden method is resolved at runtime, that is why it is called runtime polymorphism.",
    "email": "abc@gmail.com"
}