{
      "answer": "Polymorphism means to process objects differently based on their data type.     In other words it means, one method with multiple implementation, for a certain class of action. And     which implementation to be used is decided at runtime depending upon the situation (i.e., data type of     the object)     This can be implemented by designing a generic interface, which provides generic methods for a certain     class of action and there can be multiple classes, which provides the implementation of these generic     methods.     In object-oriented programming, polymorphism refers to a programming language&#39;s ability to process     objects differently depending on their data type or class. More specifically, it is the ability to redefine     methods for derived classes. 1) Static Polymorphism also known as compile time polymorphism - Polymorphism that is resolved     during compiler time is known as static polymorphism. Method overloading is an example of compile     time polymorphism.     2) Dynamic Polymorphism also known as runtime polymorphism - It is also known as Dynamic     Method Dispatch. Dynamic polymorphism is a process in which a call to an overridden method is     resolved at runtime, that is why it is called runtime polymorphism.",
      "keywords": "['one name many forms' , 'generic interface', 'implementation', 'runtime', 'same method name', 'same function name']",
      "out_of": 5
    }